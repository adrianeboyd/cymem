parameters:
  python_version: ''
  architecture: ''

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.python_version }}
      architecture: ${{ parameters.architecture }}

  - script: |
      arch -arm64 python -m pip install --upgrade pip setuptools
      arch -arm64 python -m pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      arch -arm64 python setup.py build_ext --inplace
      arch -arm64 python setup.py sdist
    displayName: 'Build sdist'

  - script: |
      arch -arm64 python -m pip freeze > installed.txt
      arch -arm64 python -m pip uninstall -y -r installed.txt
    displayName: 'Uninstall all packages'

  - script: |
      arch -arm64 python -m pip install dist/*.tar.gz
    condition: in( variables['Agent.OS'], 'Linux', 'Darwin')
    displayName: 'Install from sdist (Linux, Mac)'

  - script: |
      arch -arm64 python -m pip install -e .
    condition: eq( variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install with pip (Windows)'

  - script: |
      arch -arm64 python -m pip wheel . -w dist
    displayName: 'Build wheel'

  - script: |
      arch -arm64 python -m pip install -r requirements.txt
      arch -arm64 python -m pytest --pyargs cymem
    displayName: 'Run tests'
