trigger:
  batch: true
  branches:
    include:
    - '*'

jobs:

- job: 'Test'
  strategy:
    matrix:
#     Python36Linux:
#       imageName: 'ubuntu-16.04'
#       python.version: '3.6'
#     Python36Windows:
#       imageName: 'vs2017-win2016'
#       python.version: '3.6'
#     Python36Mac:
#       imageName: 'macos-10.14'
#       python.version: '3.6'
#     Python37Linux:
#       imageName: 'ubuntu-16.04'
#       python.version: '3.7'
     Python37LinuxARM64:
       imageName: 'macmini-debian'
       python.version: '3.7'
       architecture: 'ARM64'
#     Python37Windows:
#       imageName: 'vs2017-win2016'
#       python.version: '3.7'
#     Python37Mac:
#       imageName: 'macos-10.14'
#       python.version: '3.7'
#     Python38Linux:
#       imageName: 'ubuntu-16.04'
#       python.version: '3.8'
#     Python38Windows:
#       imageName: 'vs2017-win2016'
#       python.version: '3.8'
#     Python38Mac:
#       imageName: 'macos-10.14'
#       python.version: '3.8'
#     Python39Linux:
#       imageName: 'ubuntu-16.04'
#       python.version: '3.9'
#     Python39Windows:
#       imageName: 'vs2017-win2016'
#       python.version: '3.9'
#     Python39Mac:
#       imageName: 'macos-10.14'
#       python.version: '3.9'
    maxParallel: 4
  pool:
    name: "Default"
    #vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(architecture)'

  - script: |
      python -m venv .venv
    displayName: 'Install dependencies'

  - script: |
      source .venv/bin/activate
      python -m pip install --upgrade pip setuptools
      python -m pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      source .venv/bin/activate
      python setup.py build_ext --inplace
      python setup.py sdist
    displayName: 'Build sdist'

  - script: |
      source .venv/bin/activate
      python -m pip freeze > installed.txt
      python -m pip uninstall -y -r installed.txt
    displayName: 'Uninstall all packages'

  - script: |
      source .venv/bin/activate
      python -m pip install dist/*.tar.gz
    condition: in( variables['Agent.OS'], 'Linux', 'Darwin')
    displayName: 'Install from sdist (Linux, Mac)'

  - script: |
      source .venv/bin/activate
      python -m pip install -e .
    condition: eq( variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install with pip (Windows)'

  - script: |
      source .venv/bin/activate
      python -m pip install -r requirements.txt
      python -m pytest cymem
    displayName: 'Run tests'
